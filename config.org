#+TITLE: Emacs config
#+EMAIL: giulio.pietroiusti@gmail.com
#+LANGUAGE: en
#+CREATOR: Emacs 25.3.1 (Org mode 9.1.5)

* Me
#+BEGIN_SRC emacs-lisp
  (setq user-full-name "Giulio Pietroiusti"
        user-mail-address "giulio.pietroiusti@gmail.com")
#+END_SRC


* Tetris
Reinclude tetris, which is not present in Fedora.
#+BEGIN_SRC emacs-lisp
  (load "~/.emacs.d/tetris.el")
#+END_SRC


* Common lisp functions and macros
#+BEGIN_SRC emacs-lisp
  (require 'cl)
#+END_SRC


* Melpa stable
#+BEGIN_SRC emacs-lisp
  (require 'package)
  (add-to-list 'package-archives
               '("melpa-stable" . "https://stable.melpa.org/packages/") t)
  (package-initialize)
#+END_SRC


* which-key
Minor mode that displays key bindings
#+BEGIN_SRC emacs-lisp
  (require 'which-key)
  (which-key-mode)
  (which-key-setup-side-window-bottom)
#+END_SRC


* Elisp configuration
#+BEGIN_SRC emacs-lisp
  (require 'paredit)
  (require 'rainbow-delimiters)
  (require 'company)
  ;; Enable paredit, rainbow-delimiters and show-paren-mode for Emacs lisp
  ;; mode (mode to edit Emacs files *.el) and lisp-interaction-mode (mode
  ;; to edit *scratch* buffer)
  (add-hook 'after-init-hook 'global-company-mode)
  (add-hook 'emacs-lisp-mode-hook
            (lambda ()
              (paredit-mode t)
              (rainbow-delimiters-mode t)
              (show-paren-mode 1)
              ))
  (add-hook 'lisp-interaction-mode
            (lambda ()
              (paredit-mode t)
              (rainbow-delimiters-mode t)
              (show-paren-mode 1)
              ))
#+END_SRC


* C configuration
#+BEGIN_SRC emacs-lisp
  ;; C style
  (setq c-default-style "linux"
        c-basic-offset 4)
#+END_SRC


* Encoding
#+BEGIN_SRC emacs-lisp
  ;; set default file encoding
  (set-language-environment "UTF-8")
  (set-default-coding-systems 'utf-8)
#+END_SRC


* Beep
#+BEGIN_SRC emacs-lisp
  ;; get visual indication
  (setq visible-bell 1)
#+END_SRC


* Current line highlighting
#+BEGIN_SRC emacs-lisp
  (when window-system (global-hl-line-mode t))
#+END_SRC


* Font
** size
#+BEGIN_SRC emacs-lisp
  ;; Font font size 
  (set-face-attribute 'default (selected-frame) :height 110)
#+END_SRC


* Bars
#+BEGIN_SRC emacs-lisp
  ;; Don't show tool bar
  (tool-bar-mode 0)
  ;; Don't show menu bar
  (menu-bar-mode 0)
  ;; Don't show scroll bar
  (when window-system
    (scroll-bar-mode 0))
#+END_SRC

* Show matching parenthesis
#+BEGIN_SRC emacs-lisp
  ;; show matching parenthesis
  (show-paren-mode 1)
#+END_SRC

* Auto-fill
#+BEGIN_SRC emacs-lisp
  ;; enable auto-fill-mode when in text-mode and org-mode
  (add-hook 'text-mode-hook 'turn-on-auto-fill)
  (add-hook 'org-mode-hook 'turn-on-auto-fill)
#+END_SRC

* Tabs
#+BEGIN_SRC emacs-lisp
;; set tab to 4 spaces
(setq tab-width 4) ; or any other preferred value
(defvaralias 'c-basic-offset 'tab-width)
(defvaralias 'cperl-indent-level 'tab-width)
#+END_SRC

* AUCTeX
#+BEGIN_SRC emacs-lisp
  ;; from the manual: If you want to make AUCTeX aware of style files and multi-file
  ;; documents right away, insert the following in your '.emacs' file. 
  (setq TeX-auto-save t)
  (setq Tex-parse-self t)
  (setq-default TeX-master nil)
#+END_SRC

* evil
#+BEGIN_SRC emacs-lisp
  (require 'evil)
  ;; emacs state as default in the following modes 
  ;; (evil-set-initial-state 'dired-mode 'emacs)
  ;; (evil-set-initial-state 'Info-mode 'emacs)
  ;; (evil-set-initial-state 'help-mode 'emacs)
  ;; (evil-set-initial-state 'eshell-mode 'emacs)
  ;; (evil-set-initial-state 'calendar-mode 'emacs)
  ;; (evil-set-initial-state 'erc-mode 'emacs)
  ;; (evil-set-initial-state 'Buffer-menu-mode 'emacs)

  (setq evil-search-module 'evil-search)

  ;; Change cursor color in different modes
  ;; https://github.com/bling/dotemacs/blob/master/config/init-evil.el
  (setq evil-emacs-state-cursor '("grey" box))
  (setq evil-motion-state-cursor '("red" box))
  (setq evil-normal-state-cursor '("red" box))
  (setq evil-visual-state-cursor '("red" box))
  (setq evil-insert-state-cursor '("red" bar))
  (setq evil-replace-state-cursor '("red" bar))
  (setq evil-operator-state-cursor '("red" hollow))
  ;; TODO: change color of cursor when it is in the minibuffer

  ;; emacs keybindings as a default!
  (setq evil-default-state 'emacs
        evil-insert-state-modes nil
        evil-motion-state-modes nil)

  (evil-mode 1)
#+END_SRC

* ido
#+BEGIN_SRC emacs-lisp
  ;; Ido mode and ido vertical mode
  (require 'ido)
  (setq ido-enable-flex-matching t)
  (setq ido-everywhere t)
  (ido-mode 1)
#+END_SRC


* smex
#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "M-x") 'smex)
#+END_SRC

* org
#+BEGIN_SRC emacs-lisp
  (require 'org)
  (setq org-startup-indented t)
  (setq org-indent-mode t)
  (setq org-hide-leading-stars t)
  (setq org-src-fontify-natively t)
  ;; The four Org commands org-store-link, org-capture, org-agenda, and
  ;; org-iswitchb should be accessible through global keys (i.e.,
  ;; anywhere in Emacs, not just in Org buffers).
  (global-set-key "\C-cl" 'org-store-link)
  (global-set-key "\C-cc" 'org-capture)
  (global-set-key "\C-ca" 'org-agenda)
  (global-set-key "\C-cb" 'org-iswitchb)
  ;; org capture
  (setq org-default-notes-file "~/Dropbox/org/capture.org")


  ;; Define todo states
  (setq org-todo-keywords
        '((sequence "TODO" "IN PROGRESS" "DONE" )))

#+END_SRC


* startup
#+BEGIN_SRC emacs-lisp
  ;; org agenda at startup
  (setq inhibit-splash-screen t)
  (org-agenda-list 14)
  (delete-other-windows)
#+END_SRC

* Delete Selection Mode
#+BEGIN_SRC emacs-lisp
  ;; If you enable Delete Selection mode, a minor mode, then inserting
  ;; text while the mark is active causes the selected text to be
  ;; deleted first. This also deactivates the mark.
  (delete-selection-mode 1)
#+END_SRC


* iy-go-up-to-char
#+BEGIN_SRC emacs-lisp
  ;; simulate vim 'f' (also backward)
  (global-set-key (kbd "C-c f") 'iy-go-up-to-char)
  (global-set-key (kbd "C-c F") 'iy-go-up-to-char-backward)
  ;; make the every key behave normally after these commands
  (setq iy-go-to-char-override-local-map 'nil)
#+END_SRC


* avy
#+BEGIN_SRC emacs-lisp
  (global-set-key (kbd "C-;") 'avy-goto-char)
  (global-set-key (kbd "C-:") 'avy-goto-line)
#+END_SRC


* js2-mode
#+BEGIN_SRC emacs-lisp
  (require 'js2-mode)
  ;; js2-mode as a defalut for js files
  (add-to-list 'auto-mode-alist `(,(rx ".js" string-end) . js2-mode))
  ;;TODO
  ;;autocompletion
#+END_SRC


* Themes
** solarized-emacs
#+BEGIN_SRC emacs-lisp
  ;; Avoid all font-size changes
  (setq solarized-height-minus-1 1.0)
  (setq solarized-height-plus-1 1.0)
  (setq solarized-height-plus-2 1.0)
  (setq solarized-height-plus-3 1.0)
  (setq solarized-height-plus-4 1.0)

  ;; (load-theme 'solarized-light t)
  (load-theme 'solarized-dark t)
#+END_SRC
